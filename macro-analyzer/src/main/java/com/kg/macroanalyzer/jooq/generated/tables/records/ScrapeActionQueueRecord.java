/*
 * This file is generated by jOOQ.
 */
package com.kg.macroanalyzer.jooq.generated.tables.records;


import com.kg.macroanalyzer.jooq.generated.tables.ScrapeActionQueue;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.5",
        "catalog version:com.kg.macroanalyzer.configuration.FlywayCatalogVersion",
        "schema version:com.kg.macroanalyzer.configuration.FlywayCatalogVersion"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScrapeActionQueueRecord extends UpdatableRecordImpl<ScrapeActionQueueRecord> implements Record6<Integer, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.scrape_action_queue.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.scrape_action_queue.dataset_name</code>.
     */
    public void setDatasetName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.dataset_name</code>.
     */
    public String getDatasetName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.scrape_action_queue.scrape_date</code>.
     */
    public void setScrapeDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.scrape_date</code>.
     */
    public LocalDateTime getScrapeDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.scrape_action_queue.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.scrape_action_queue.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.scrape_action_queue.status</code>.
     */
    public void setStatus(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.scrape_action_queue.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.ID;
    }

    @Override
    public Field<String> field2() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.DATASET_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.SCRAPE_DATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.CREATED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.UPDATED;
    }

    @Override
    public Field<Integer> field6() {
        return ScrapeActionQueue.SCRAPE_ACTION_QUEUE.STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDatasetName();
    }

    @Override
    public LocalDateTime component3() {
        return getScrapeDate();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdated();
    }

    @Override
    public Integer component6() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDatasetName();
    }

    @Override
    public LocalDateTime value3() {
        return getScrapeDate();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdated();
    }

    @Override
    public Integer value6() {
        return getStatus();
    }

    @Override
    public ScrapeActionQueueRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord value2(String value) {
        setDatasetName(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord value3(LocalDateTime value) {
        setScrapeDate(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord value5(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord value6(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public ScrapeActionQueueRecord values(Integer value1, String value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScrapeActionQueueRecord
     */
    public ScrapeActionQueueRecord() {
        super(ScrapeActionQueue.SCRAPE_ACTION_QUEUE);
    }

    /**
     * Create a detached, initialised ScrapeActionQueueRecord
     */
    public ScrapeActionQueueRecord(Integer id, String datasetName, LocalDateTime scrapeDate, LocalDateTime created, LocalDateTime updated, Integer status) {
        super(ScrapeActionQueue.SCRAPE_ACTION_QUEUE);

        setId(id);
        setDatasetName(datasetName);
        setScrapeDate(scrapeDate);
        setCreated(created);
        setUpdated(updated);
        setStatus(status);
        resetChangedOnNotNull();
    }
}
